{
  "Debug": {
    "prefix": "debug, sf",
    "body": [
      "<pre>{JSON.stringify(${1:data}, null, 2)}</pre>"
    ],
    "description": "Generate a visual debug template for react"
  },

  "NextPage": {
    "prefix": "np",
    "body": [
      "export default function $1Page() {",
      "\treturn <div>$0</div>;",
      "}",
      "",
    ],
    "description": "Generate a NextPage template"
  },

"NextPage with server-side fetching": {
    "prefix": "npserv",
    "body": [
      "import db from \"~/server/db\";",
      "",
      "export default async function $1Page() {",
      "\tconst res = await db.$2",
      "",
      "\treturn <div>$0</div>;",
      "}",
      "",
    ],
    "description": "Generate a NextPage template"
  },

  "React component": {
    "prefix": "rc",
    "body": [
      "const ${TM_FILENAME_BASE}: React.FC = () => {",
      "\treturn <div>$0</div>",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Generate a React component template"
  },

  "React component with props": {
    "prefix": "rcp, rci",
    "body": [
      "interface ${TM_FILENAME_BASE}Props {",
      "\t$0",
      "}",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<${TM_FILENAME_BASE}Props> = ({}) => {",
      "\treturn <div>$1</div>",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Generate a React component with props template"
  },

  "React component with props and spreading": {
    "prefix": "rcpspread, rcispread",
    "body": [
      "interface ${TM_FILENAME_BASE}Props {",
      "\t$0",
      "}",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<${TM_FILENAME_BASE}Props & Omit<React.ComponentPropsWithoutRef<\"div\">, keyof ${TM_FILENAME_BASE}Props>> = ({ ...props }) => {",
      "\treturn <div {...props}>$1</div>",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Generate a React component with props and spreading template"
  },

  "React component with props and spreading and tailwind-variants": {
    "prefix": "rcpvar, rcivar",
    "body": [
      "import { tv } from \"tailwind-variants\";"
      "import type { VariantProps } from \"tailwind-variants\";"
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "\t$1",
      "}",
      "",
      "const ${TM_FILENAME_BASE/(.)(.*)/${1:/downcase}${2}/} = tv({",
      "\tbase: \"\",",
      "\tvariants: {",
      "\t\t$0",
      "\t}",
      "})",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<",
      "\t${TM_FILENAME_BASE}Props & ",
      "\t\tVariantProps<typeof ${TM_FILENAME_BASE/(.)(.*)/${1:/downcase}${2}/}> & ",
      "\t\tOmit<",
      "\t\t\tReact.ComponentPropsWithoutRef<\"div\">,",
      "\t\t\tkeyof ${TM_FILENAME_BASE}Props | keyof VariantProps<typeof ${TM_FILENAME_BASE/(.)(.*)/${1:/downcase}${2}/}>",
      "\t\t>",
      "> = ({ $0, ...props }) => {",
      "\treturn <div {...props} className={${TM_FILENAME_BASE/(.)(.*)/${1:/downcase}${2}/}({ $0 })}>$2</div>",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ]
  }
}
